@using static NativoPlus.BlazorRCL.AllEnumerations

<div class="@(ToggleState ? "nativo-menu-is-open" : "nativo-menu-is-closed") nativo-click-capture" @onclick=@(() => SetToggleState(false))></div>

<div class="@(ToggleState ? "is-open" : "is-closed") @MenuClass">
    <span class="close-nativo-menu icon-cross2 nativo-right-pulled" @onclick=@(() => SetToggleState(false))></span>
    <ul class="nativo-menu-list">
        @ChildContent
    </ul>
</div>

@code {
    [Parameter]
    public bool ToggleState { get; set; }

    [Parameter]
    public EventCallback<bool> ToggleStateChanged { get; set; }

    private async Task SetToggleState(bool value)
    {
        if (ToggleState != value)
        {
            ToggleState = value;
            await ToggleStateChanged.InvokeAsync(value);
        }
    }

    [Parameter]
    public MenuPosition? Position { get; set; }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    private string? MenuClass;

    protected override void OnInitialized() => SetMenuClass();

    private void SetMenuClass()
    {
        switch (Position)
        {
            case MenuPosition.Right:
                MenuClass = "nativo-menu-right";
                break;
            case MenuPosition.Left:
                MenuClass = "nativo-menu-left";
                break;
            case MenuPosition.Top:
                MenuClass = "nativo-menu-top";
                break;
            case MenuPosition.Bottom:
                MenuClass = "nativo-menu-bottom";
                break;
            default:
                MenuClass = "nativo-menu-right";
                break;
        }
    }
}

<link href="./_content/NativoPlus.BlazorRCL/css/linearicons.css" rel="stylesheet" />